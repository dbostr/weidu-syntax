{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "weidu",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#storage"
		},
		{
			"include": "#entities"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.weidu",
					"match": "\\b(ACTION_IF|ACTION_FOR_EACH|ACTION_DEFINE_ASSOCIATIVE_ARRAY|ACTION_MATCH|ACTION_PHP_EACH|ACTION_TRY|AS|IN|BEGIN|BUT_ONLY|BUT_ONLY_IF_IT_CHANGES|END|ELSE|FOR|IF|PATCH_IF|THEN|UNLESS|WITH|DEFAULT|PHP_EACH|WHILE|INNER_PATCH_SAVE)\\b"
				},
				{
					"name": "keyword.other.weidu",
					"match": "\\b(_INVALID_)\\b"
				},
				{
					"name": "invalid.weidu",
					"match": "\\b(FAIL)\\b"
				}
			]
		},
		"storage": {
			"patterns": [
				{
					"name": "storage.modifier.weidu",
					"match": "\\b(INT_VAR|STR_VAR|RET)\\b"
				},
				{
					"name": "variable.other.less.weidu",
					"match": "((@|#)\\d+|\\(\\s*AT \\\"\\w+\\\"\\s*\\))"
				},
				{
					"name": "entity.other.attribute-name.weidu",
					"match": "%\\w+%"
				}
			]
		},
		"entities": {
			"patterns": [
				{
					"name": "entity.name.class.weidu",
					"match": "\\b(ADD_KIT|INCLUDE|LAF|ALLOW_MISSING|AUTHOR|AUTO_TRA|APPEND|BACKUP|COPY|COPY_EXISTING|COPY_EXISTING_REGEXP|REPLACE_TEXTUALLY|EXTEND_BOTTOM|EXTEND_TOP|LANGUAGE|LPF|REPLACE|SAY|SAY_EVALUATED|VERSION)\\b"
				},
				{
					"name": "entity.name.type.weidu",
					"match": "\\b(DEFINE_ACTION_FUNCTION|DEFINE_PATCH_FUNCTION|DEFINE_ACTION_MACRO|DEFINE_PATCH_MACRO|LAUNCH_ACTION_FUNCTION|LAUNCH_PATCH_FUNCTION|LAUNCH_ACTION_MACRO|LAUNCH_PATCH_MACRO)\\b"
				},
				{
					"name": "support.function.weidu",
					"match": "\\b(BYTE_AT|READ_ASCII|WRITE_ASCII|WRITE_EVALUATED_ASCII|READ_STRREF|WRITE_ASCIIE|WRITE_ASCII_LIST|WRITE_ASCIIL|READ_SHORT|READ_LONG|WRITE_SHORT|WRITE_LONG|PRINT|PATCH_PRINT|SPRINT|GET_OFFSET_ARRAY|GET_OFFSET_ARRAY2|READ_2DA_ENTRY_FORMER|COUNT_2DA_COLS|READ_2DA_ENTRY_FORMER|STRING_EQUAL_CASE|STRING_CONTAINS_REGEXP|EXACT_MATCH|SET|ADD_SPELL_EFFECT|ADD_ITEM_EQEFFECT|ADD_CRE_EFFECT|DELETE_EFFECT|READ_2DA_ENTRIES_NOW|ALTER_EFFECT|ALTER_ITEM_HEADER|IDS_OF_SYMBOL|RESOLVE_STR_REF|READ_BYTE|WRITE_BYTE|LOCAL_SET|LOCAL_SPRINT|OUTER_SPRINT|FILE_EXISTS_IN_GAME|ENGINE_IS|GAME_IS|MOD_IS_INSTALLED)\\b"
				},
				{
					"name": "meta.selector.weidu",
					"match": "\\b(opcode|header_type|dicesize|dicenumber|match_opcode|target|timing|parameter1|parameter2|special|resist_dispel|resource)(\\b|=)"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"match": "\\b(0x(\\d|[a-f]|[A-F])+|\\d+)\\b",
					"name": "constant.numeric.weidu"
				},
				{
					"match": "\\b(GLOB|BIT6|ITM_V10_HEAD_EFFECTS|SOURCE_SIZE|~override~)\\b",
					"name": "constant.language.weidu"
				},
				{
					"name": "constant.regexp.weidu",
					"match": "\\b(AND|OR|&|BOR|NOT)\\b"
				}
			]
		},
		"comments":{
			"patterns": [
				{
					"name": "comment.block.weidu",
					"begin": "/\\*",
					"end": "\\*/",
					"scope": "punctuation.definition.comment.weidu",
					"contentName":"comment.block"
				},
				{ 
					"match": "//.*$", 
					"name": "comment.line.weidu",
					"scope": "punctuation.definition.comment.weidu"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.single.weidu",
					"begin": "~",
					"end": "~",
					"patterns": [
						{
							"name": "constant.character.escape.weidu",
							"match": "\\\\."
						},
						{
							"name": "constant.regexp.weidu",
							"match": "\\b(override)\\b"
						},
						{
							"name": "entity.other.attribute-name",
							"match": "(%\\w+%|<PRO_[A-Z]+>)"
						}
					]
				},
				{
					"name": "string.quoted.double.weidu",
					"begin": "\"",
					"end": "\"",
						"patterns": [
							{
								"name": "constant.character.escape.weidu",
								"match": "\\\\."
							},
							{
								"name": "constant.regexp.weidu",
								"match": "\\b(override)\\b"
							},
							{
								"name": "entity.other.attribute-name",
								"match": "(%\\w+%|<PRO_[A-Z]+>)"
							}
						]

				}
			]
		}
	},
	"scopeName": "source.weidu"
}